add_custom_command(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/luajit/usr/local/lib/libluajit-5.1.a
	PRE_LINK
	COMMAND $(MAKE) "BUILDMODE=static" "'CFLAGS=-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT'"
	COMMAND $(MAKE) "install" "DESTDIR=${CMAKE_CURRENT_SOURCE_DIR}/luajit"
	COMMENT "Building luajit"
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/luajit/
)
add_custom_target(LuaJIT DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/luajit/usr/local/lib/libluajit-5.1.a)

###############################################################################

SET ( DPDK_OUTPUT

${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/libdpdk.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_acl.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_bitratestats.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_cfgfile.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_cmdline.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_cryptodev.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_distributor.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_eal.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_efd.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_ethdev.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_eventdev.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_gro.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_hash.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_ip_frag.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_jobstats.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_kni.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_kvargs.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_latencystats.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_lpm.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_mbuf.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_mempool.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_mempool_ring.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_mempool_stack.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_meter.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_metrics.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_net.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pdump.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pipeline.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_af_packet.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_ark.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_avp.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_bnxt.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_bond.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_crypto_scheduler.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_cxgbe.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_e1000.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_ena.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_enic.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_failsafe.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_fm10k.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_i40e.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_ixgbe.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_kni.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_lio.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_nfp.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_null.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_null_crypto.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_octeontx_ssovf.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_qede.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_ring.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_sfc_efx.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_skeleton_event.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_sw_event.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_tap.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_thunderx_nicvf.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_vhost.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_virtio.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_pmd_vmxnet3_uio.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_port.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_power.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_reorder.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_ring.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_sched.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_table.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_timer.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/lib/librte_vhost.a
)
add_custom_command(OUTPUT ${DPDK_OUTPUT}
	PRE_LINK
	COMMAND $(MAKE) "config" "T=x86_64-native-linuxapp-gcc" "O=x86_64-native-linuxapp-gcc"
	COMMAND $(MAKE) "O=x86_64-native-linuxapp-gcc"
	COMMENT "Building DPDK"
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/dpdk/
)
add_custom_target(DPDK DEPENDS ${DPDK_OUTPUT})

###############################################################################

ADD_SUBDIRECTORY(MoonState)

ADD_DEPENDENCIES(MoonState DPDK)
