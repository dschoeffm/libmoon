add_custom_command(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/luajit/usr/local/lib/libluajit-5.1.a
	PRE_LINK
	COMMAND $(MAKE) "BUILDMODE=static" "'CFLAGS=-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT'"
	COMMAND $(MAKE) "install" "DESTDIR=${CMAKE_CURRENT_SOURCE_DIR}/luajit"
	COMMENT "Building luajit"
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/luajit/
)
add_custom_target(LuaJIT DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/luajit/usr/local/lib/libluajit-5.1.a)

###############################################################################

SET ( DPDK_OUTPUT

${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibdpdk.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_acl.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_bitratestats.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_cfgfile.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_cmdline.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_cryptodev.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_distributor.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_eal.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_efd.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_ethdev.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_eventdev.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_gro.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_hash.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_ip_frag.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_jobstats.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_kni.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_kvargs.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_latencystats.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_lpm.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_mbuf.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_mempool.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_mempool_ring.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_mempool_stack.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_meter.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_metrics.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_net.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pdump.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pipeline.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_af_packet.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_ark.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_avp.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_bnxt.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_bond.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_crypto_scheduler.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_cxgbe.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_e1000.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_ena.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_enic.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_failsafe.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_fm10k.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_i40e.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_ixgbe.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_kni.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_lio.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_nfp.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_null.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_null_crypto.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_octeontx_ssovf.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_qede.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_ring.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_sfc_efx.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_skeleton_event.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_sw_event.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_tap.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_thunderx_nicvf.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_vhost.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_virtio.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_pmd_vmxnet3_uio.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_port.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_power.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_reorder.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_ring.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_sched.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_table.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_timer.a
${CMAKE_CURRENT_SOURCE_DIR}/dpdk/x86_64-native-linuxapp-gcc/liblibrte_vhost.a
)

add_custom_command(OUTPUT ${DPDK_OUTPUT}
	PRE_LINK
	COMMAND $(MAKE) "config" "T=x86_64-native-linuxapp-gcc" "O=x86_64-native-linuxapp-gcc"
	COMMAND $(MAKE) "O=x86_64-native-linuxapp-gcc"
	COMMENT "Building DPDK"
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/dpdk/
)
add_custom_target(DPDK DEPENDS ${DPDK_OUTPUT})

###############################################################################

ADD_SUBDIRECTORY(MoonState)

ADD_DEPENDENCIES(MoonState DPDK)
